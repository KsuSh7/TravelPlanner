"""remove unique constraint from city name

Revision ID: e4a0ed0dd7c1
Revises: 2478e7024830
Create Date: 2025-05-24 22:33:33.681834

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e4a0ed0dd7c1'
down_revision = '2478e7024830'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('latitude',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('longitude',
               existing_type=sa.FLOAT(),
               nullable=True)

    with op.batch_alter_table('trip', schema=None) as batch_op:
        batch_op.alter_column('city_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('trip', schema=None) as batch_op:
        batch_op.alter_column('city_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.alter_column('longitude',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('latitude',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    # ### end Alembic commands ###
